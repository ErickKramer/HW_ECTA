function [individuals, Front] = FNDS(pop, p, fitness_ones, fitness_zeros)
% function to perform the non-dominated sort
%% initialize the variables 
F{1} = [];

%% begin the sorting procedure, obtain the values for Sp and Np for each solution
for ip = 1:p.popSize
    
    for iq = 1:p.popSize
        if ip ~= iq
            if dom_validator(ip, iq, fitness_ones, fitness_zeros)
                individual(i).Sp = [individual(i).Sp, individual(j).val]
            end
            if dom_validator(iq, ip, fitness_ones, fitness_zeros)
                individual(i).Np = individual(i).Np + 1;
            end
        end
    end
end   
%% perform the sorting based on the values obtained previously

for idx = 1:p.popSize
    if individual(i).Np == 0
        individual(i).rank = 1;
        Front(1).f = [Front(1).f, i]
    end
end

%% calculate pareto rank of each individual
iFront = 1;
while( ~isempty(Front(f_count).f) )
    Q = [];
    for p = Front(f_count).f
        for q = individual(p).Sp
            individual(q).Np = individual(q).Np -1;
            if( individual(q).Np == 0 )
                pop(q).rank = f_count+1;
                Q = [Q, q];
            end
        end
    end
    f_count = f_count + 1;
    
    Front(f_count).f = Q;
end
individuals = individual;
Front(f_count) = []; 
